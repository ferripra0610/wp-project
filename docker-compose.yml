version: '3.9'  # Compose file format version

services:
  app:  # PHP application service
    build:
      context: .  # Build context is the current directory
      dockerfile: Dockerfile  # Use the Dockerfile in the current directory
    container_name: php-app  # Set container name to 'php-app'
    volumes:
      - .:/var/www  # Mount current directory into container at /var/www
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_DATABASE}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    networks:
      - appnet

  webserver:  # NGINX web server service
    image: nginx:alpine
    container_name: nginx-app
    ports:
      - "${APP_PORT}:80"  # Example: APP_PORT=8080 in .env
    volumes:
      - .:/var/www
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - appnet

  db:  # MySQL database service
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}  # Tambahkan ini di .env
    volumes:
      - mysqldata:/var/lib/mysql
      - ./dump:/docker-entrypoint-initdb.d  # Auto-import .sql saat pertama run
    networks:
      - appnet
    ports:
      - "3306:3306"

volumes:
  mysqldata:  # Persistent volume untuk MySQL

networks:
  appnet:
    driver: bridge
